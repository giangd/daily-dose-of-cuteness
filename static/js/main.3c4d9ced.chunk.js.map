{"version":3,"sources":["Components/Heading.js","Components/Media.js","Components/MasonryImages.js","Components/HomePage.js","Components/NavBar.js","App.js","index.js"],"names":["Wrapper","styled","div","props","headingText","subText","currentPage","className","MediaWrapper","Image","img","Video","video","LinkOverlay","HeartOverlay","Overlay","height","LinkButton","a","LinkIcon","FiExternalLink","LinkText","p","HeartButton","button","HeartOutlineIcon","BsHeart","HeartFilledIcon","BsHeartFill","handleHeartClick","console","log","overlayContent","href","this","redditLink","rel","target","subreddit","onClick","isHeartClicked","type","src","url","alt","autoPlay","loop","poster","posterUrl","React","Component","MasonryStyles","dataLength","mediaObjects","length","next","fetchBasedOnWeights","hasMore","style","overflow","breakpointCols","columnClassName","map","mediaObject","index","key","id","CustomButton","Button","color","Row","Col","xs","value","handleCategoryClick","NavBar","NavCol","NavButton","HomeIcon","BsHouseDoorFill","HomeHoveredIcon","HeartIcon","HeartHoveredIcon","GithubIcon","AiOutlineGithub","Container","onMouseEnter","handleMouseEnterHome","onMouseLeave","handleMouseLeaveHome","handleClickHome","isHomeHovered","handleMouseEnterHeart","handleMouseLeaveHeart","handleClickHeart","isHeartHovered","handleMouseEnterGithub","handleMouseLeaveGithub","handleClickGithub","isGithubHovered","subreddits","dogs","cats","reptiles","birds","everything","GlobalStyle","createGlobalStyle","App","e","setState","prevState","newNavData","cloneDeep","navData","newMediaObjects","state","heartedMedia","window","open","categories","getInitialSubredditData","newCategories","category","name","weight","normalizedWeight","undefined","afterId","getNormalizedSubredditData","categoryName","sum","subredditName","subredditObj","subredditsToFetchFrom","numImagesFetched","random","Math","namesIndex","names","Object","keys","chosenName","numImages","fetchImageFromSubreddit","config","crossdomain","after","axios","get","data","Error","concat","message","handleClickMediaHeart","splice","localStorage","setItem","JSON","stringify","moreOrLessText","newHeartedMedia","filter","element","push","oldPercent","round","newPercent","newAlertText","alertText","showAlert","setTimeout","getItem","parse","Alert","variant","position","left","right","zIndex","marginLeft","marginRight","padding","fluid","Heading","MasonryImages","renderMasonryImages","HomePage","renderHomePage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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C,EAAM2F,kBAEd3F,EAAM4F,eACH,kBAACb,GAAD,CAAkBb,MAAO,iBAEzB,kBAACY,GAAD,CAAWZ,MAAO,sBAG1B,kBAACQ,GAAD,CACIS,aAAcnF,EAAM6F,uBACpBR,aAAcrF,EAAM8F,uBACpB1D,QAASpC,EAAM+F,mBAEd/F,EAAMgG,gBACH,kBAAChB,GAAD,CAAYd,MAAO,iBAEnB,kBAACc,GAAD,CAAYd,MAAO,2B,kMCvGnD,IAAM+B,GAAa,CACfC,KAAM,CACF,oBACA,cACA,eACA,iBACA,YACA,SACA,sBACA,uBACA,eACA,QACA,WACA,QACA,cACA,kBACA,kBACA,aACA,WACA,cACA,OACA,WACA,MACA,cACA,QACA,wBACA,WACA,WAEJC,KAAM,CACF,WACA,OACA,cACA,SACA,kBACA,mBACA,eACA,aACA,UACA,cACA,WACA,kBACA,QACA,MACA,UACA,oBACA,aACA,UACA,UACA,cACA,aACA,UACA,iBACA,wBAEJC,SAAU,CACN,iBACA,aACA,UACA,gBACA,SACA,YACA,cACA,eACA,SACA,cACA,UACA,gBACA,WACA,oBACA,QACA,UACA,aACA,cACA,iBACA,YACA,SACA,uBAEJC,MAAO,CACH,cACA,mBACA,UACA,WACA,cACA,OACA,QACA,OACA,WACA,eACA,WACA,UACA,gBACA,UACA,UACA,UACA,eACA,kBACA,kBACA,gBACA,UACA,YACA,QACA,eACA,cACA,kBAEJC,WAAY,CACR,mBACA,mBACA,oBACA,gBACA,iBACA,cACA,aACA,gBACA,oBACA,uBACA,sBACA,qBACA,eACA,uBACA,iBACA,oBACA,iBACA,oBACA,iBACA,kBACA,MACA,iBACA,kBACA,kBACA,gBACA,WACA,UACA,cACA,UACA,eACA,qBACA,kBACA,cAIFC,GAAcC,YAAH,MAwbFC,G,kDA5aX,WAAYzG,GAAQ,IAAD,8BACf,cAAMA,IAkCVoF,qBAAuB,SAACsB,GACpB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWrB,eAAgB,EACpB,CACHuB,QAASF,OAxCF,EA4CnBvB,qBAAuB,SAACoB,GACpB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWrB,eAAgB,EACpB,CACHuB,QAASF,OAjDF,EAqDnBtB,gBAAkB,SAACmB,GACf,EAAKC,SAAS,CAAEzD,aAAc,GAAI/C,YAAa,cAtDhC,EAwDnBsF,sBAAwB,SAACiB,GACrB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWjB,gBAAiB,EACrB,CACHmB,QAASF,OA7DF,EAiEnBnB,sBAAwB,SAACgB,GACrB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWjB,gBAAiB,EACrB,CACHmB,QAASF,OAtEF,EA0EnBlB,iBAAmB,SAACe,GAChB,IAAMM,EAAkBF,IAAU,EAAKG,MAAMC,cAC7C,EAAKP,SACD,CACIxG,YAAa,cACb+C,aAAc8D,IAElB,gBAjFW,EAqFnBnB,uBAAyB,SAACa,GACtB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWb,iBAAkB,EACtB,CACHe,QAASF,OA1FF,EA8FnBf,uBAAyB,SAACY,GACtB,EAAKC,UAAS,SAACC,GACX,IAAMC,EAAaC,IAAUF,EAAUG,SAEvC,OADAF,EAAWb,iBAAkB,EACtB,CACHe,QAASF,OAnGF,EAuGnBd,kBAAoB,SAACW,GACjBS,OAAOC,KACH,mDACA,WA1GW,EA+GnB7C,oBAAsB,SAACmC,GACnB,EAAKC,SACD,CACIU,WAAY,EAAKC,0BACjBpE,aAAc,GACd/C,YAAY,GAAD,OAAKuG,EAAExE,OAAOoC,SAE7B,WACI,EAAKjB,0BAvHE,EA6HnBiE,wBAA0B,WACtB,IAAMC,EAAgBT,IAAU,EAAKG,MAAMI,YAC3C,IAAK,IAAMG,KAAYvB,GAAY,CAC/BsB,EAAcC,GAAY,GADK,oBAEZvB,GAAWuB,IAFC,IAE/B,2BAAyC,CAAC,IAA/BC,EAA8B,QACrCF,EAAcC,GAAUC,GAAQ,CAC5BC,OAAQ,EACRC,sBAAkBC,EAClBC,aAASD,IANc,+BAenC,OAJ8B,EAAKE,2BAC/BP,IA3IW,EAgJnBO,2BAA6B,SAACT,GAC1B,IAAK,IAAMU,KAAgBV,EAAY,CACnC,IAAIW,EAAM,EACV,IAAK,IAAMC,KAAiBZ,EAAWU,GAAe,CAElDC,GADqBX,EAAWU,GAAcE,GAC1BP,OAGxB,IAAK,IAAMO,KAAiBZ,EAAWU,GAAe,CAClD,IAAMG,EAAeb,EAAWU,GAAcE,GAC9CC,EAAaP,iBAAmBO,EAAaR,OAASM,GAI9D,OAAOX,GA9JQ,EAgKnBhE,oBAAsB,WAIlB,IAHA,IAEM8E,EAAwB,GAEtBC,EAAmB,EACvBA,EALc,GAMdA,IACF,CAQE,IAPA,IAAIC,EAASC,KAAKD,SACdE,EAAa,EACbC,EAAQC,OAAOC,KACf,EAAKzB,MAAMI,WAAW,EAAKJ,MAAM9G,cAI9BkI,EAAS,GAIZA,GAHO,EAAKpB,MAAMI,WAAW,EAAKJ,MAAM9G,aACpCqI,EAAMD,IAEKZ,iBACfY,IAIJ,IAAII,EAAaH,IAFjBD,GAMIJ,EAAsBQ,GADtBA,KAAcR,EACsB,CAChCI,aACAK,UAAWT,EAAsBQ,GAAYC,UAAY,GAGzB,CAChCL,aACAK,UAAW,GAKvB,IAAK,IAAMnB,KAAQU,EACf,EAAKU,wBACDpB,EACAU,EAAsBV,GAAMmB,YA5MrB,EAgNnBC,wBAhNmB,uCAgNO,WAAOpB,EAAMmB,GAAb,yCAAA7H,EAAA,6DAChB+H,EAAS,CACXC,aAAa,GAGF,mDACTC,EAAQ,EAAK/B,MAAMI,WAAW,EAAKJ,MAAM9G,aAAasH,GACvDI,QAPiB,kBAYRoB,IAAMC,IAAN,UAPC,mDAOD,YACOzB,EADP,YACemB,EADf,YAC4BI,GAClCF,GAdc,oBAWdK,KAAQtB,EAXM,EAWNA,QAAS3E,EAXH,EAWGA,aAXH,OAAAnC,EAAA,KAmBC,EAAKkG,MAAMI,WAAW,EAAKJ,MAAM9G,cAnBlC,kDAmBPsH,EAnBO,WAqBV,EAAKR,MAAMI,WAAW,EAAKJ,MAAM9G,aAAasH,GACzCI,UAAYA,EAtBP,uBAwBJ,IAAIuB,MAAM,6BAxBN,8CA6BQlG,GA7BR,2DA6BPU,EA7BO,sBA8BiB,EAAKqD,MAAM/D,cA9B5B,sEA+BWa,KAAjB,UAA2BH,EAAYG,IA/BjC,uBAgCA,IAAIqF,MAAM,6BAhCV,0RAuCZpC,EAAkBF,IAAU,EAAKG,MAAM/D,cAAcmG,OACvDnG,IAIEqE,EAAgBT,IAAU,EAAKG,MAAMI,aAC7B,EAAKJ,MAAM9G,aAAasH,GAAMI,QAAUA,EAEtD,EAAKlB,SAAS,CACVzD,aAAc8D,EACdK,WAAYE,IAjDE,kDAoDE,8BAAhB,KAAI+B,SAEG,KAAIA,QAtDG,sFAhNP,0DA8QnBC,sBAAwB,SAAC3F,GACrB,GAA+B,gBAA3B,EAAKqD,MAAM9G,YAA+B,CAC1C,IAAM6G,EAAkBF,IAAU,EAAKG,MAAM/D,cAC7C8D,EAAgBwC,OAAO5F,EAAYC,MAAO,GAE1C4F,aAAaC,QACT,eACAC,KAAKC,UAAU5C,IAEnB,EAAKL,SAAS,CAAEzD,aAAc8D,QAC3B,CACH,IAQI6C,EARE7C,EAAkBF,IAAU,EAAKG,MAAM/D,cACvC+E,EAAgBrE,EAAYzB,UAC9BoF,EAAgBT,IAAU,EAAKG,MAAMI,YAKrCyC,EAAkBhD,IAAU,EAAKG,MAAMC,cAEvC,EAAKD,MAAM/D,aAAaU,EAAYC,OAAOxB,gBAE3C2E,EAAgBpD,EAAYC,OAAOxB,gBAAiB,EAEpDyH,EAAkBA,EAAgBC,QAAO,SAACC,GACtC,OAAOA,EAAQjG,KAAOiD,EAAgBpD,EAAYC,OAAOE,MAG7DwD,EAAc,EAAKN,MAAM9G,aACrB8H,GACFP,QAAU,GAEZmC,EAAiB,SAGjB7C,EAAgBpD,EAAYC,OAAOxB,gBAAiB,EAEpDyH,EAAgBG,KAAKjD,EAAgBpD,EAAYC,QAEjD0D,EAAc,EAAKN,MAAM9G,aACrB8H,GACFP,QAAU,GAEZmC,EAAiB,QAGrB,IAAMK,EAAa5B,KAAK6B,MAEI,IADxB5C,EAAc,EAAKN,MAAM9G,aAAa8H,GACjCN,kBAETJ,EAAgB,EAAKO,2BAA2BP,GAChD,IAAM6C,EAAa9B,KAAK6B,MAEI,IADxB5C,EAAc,EAAKN,MAAM9G,aAAa8H,GACjCN,kBAGH0C,EAAY,qBAAiBR,EAAjB,wBAA+C5B,EAA/C,aAAiEiC,EAAjE,oBAAkFE,EAAlF,KAElBX,aAAaC,QACT,eACAC,KAAKC,UAAUE,IAGnB,EAAKnD,SACD,CACIzD,aAAc8D,EACdK,WAAYE,EACZL,aAAc4C,EACdQ,UAAWD,EACXE,WAAW,IAEf,WACIC,YAAW,WACH,EAAKvD,MAAMqD,YAAcD,GACzB,EAAK1D,SAAS,CAAE4D,WAAW,MAEhC,UAxVf,EAAKtD,MAAQ,CACT/D,aAAc,GACd/C,YAAa,WACbkH,WAAY,GACZH,aAAc,GACdoD,eAAW1C,EACXb,QAAS,CACLnB,gBAAgB,EAChBJ,eAAe,EACfQ,iBAAiB,EACjBZ,qBAAsB,EAAKA,qBAC3BE,qBAAsB,EAAKA,qBAC3BG,sBAAuB,EAAKA,sBAC5BC,sBAAuB,EAAKA,sBAC5BG,uBAAwB,EAAKA,uBAC7BC,uBAAwB,EAAKA,uBAC7BP,gBAAiB,EAAKA,gBACtBI,iBAAkB,EAAKA,iBACvBI,kBAAmB,EAAKA,oBApBjB,E,gEA2B8B,OAAzC0D,aAAagB,QAAQ,iBACrB1I,KAAK4E,SAAS,CACVO,aAAcyC,KAAKe,MAAMjB,aAAY,kB,+BAmUvC,IAAD,OAwCL,OACI,yBAAKrJ,UAAU,OACX,kBAACmG,GAAD,MACCxE,KAAKkF,MAAMsD,WACR,kBAACI,GAAA,EAAD,CACIC,QAAQ,UACRxK,UAAU,cACVmD,MAAO,CACHsH,SAAU,QACVC,KAAM,MACNC,MAAO,MACPC,OAAQ,EACRC,WAAY,OACZC,YAAa,SAGhBnJ,KAAKkF,MAAMqD,WAIpB,kBAAC,GAAWvI,KAAKkF,MAAMF,SACvB,yBAAKxD,MAAO,CAAE0H,WAAY,OAAQE,QAAS,kBACvC,kBAACjG,GAAA,EAAD,CAAWkG,OAAK,GACZ,kBAACjH,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KA/DQ,WACxB,GAA+B,aAA3B,EAAK6C,MAAM9G,YACX,OACI,oCACI,kBAACgE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACiH,EAAD,CACIlL,YAAa,EAAK8G,MAAM9G,gBAIpC,kBAACgE,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACkH,GAAD,iBACQ,EAAKrE,MADb,CAEIvF,iBACI,EAAK6H,sBAETlG,oBACI,EAAKA,0BA6CZkI,GAnCF,WACnB,GAA+B,aAA3B,EAAKtE,MAAM9G,YACX,OACI,kBAACqL,GAAD,CACIjH,oBAAqB,EAAKA,sBAgCjBkH,Y,GAnaf3I,IAAMC,WCxKxB2I,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3c4d9ced.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Wrapper = styled.div`\n    h1 {\n        margin-top: 20px;\n    }\n    p {\n        margin-top: 10px;\n        margin-bottom: 30px;\n    }\n`;\n\nexport default function (props) {\n    let headingText;\n    let subText;\n\n    switch (props.currentPage) {\n        case \"everything\":\n            headingText = \"Everything\";\n            subText = \"✨Everything happy and cute🎈\";\n            break;\n        case \"dogs\":\n            headingText = \"Dogs\";\n            subText =\n                \"🐕‍🦺“Scratch a dog and you’ll find a permanent job.” – Franklin P. Jones🐶\";\n            break;\n        case \"cats\":\n            headingText = \"Cats\";\n            subText =\n                \"🐈“Time spent with cats is never wasted.” – Sigmund Freud😸\";\n            break;\n        case \"reptiles\":\n            headingText = \"Reptiles\";\n            subText = \"🐍“Hissss hisssss hiss hissssss.” – A Snake🐍\";\n            break;\n        case \"birds\":\n            headingText = \"Birds\";\n            subText =\n                \"🐦“When birds burp, it must taste like bugs.” – Bill Watterson🐣\";\n            break;\n        case \"heartedPage\":\n            headingText = \"Things You've Hearted\";\n            subText = \"✨Everything happy and cute🎈\";\n            break;\n        default:\n    }\n    return (\n        <Wrapper>\n            <h1 className=\"display-4 text-center\">{headingText}</h1>\n            <p className=\"lead text-center\">{subText}</p>\n        </Wrapper>\n    );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FiExternalLink } from \"react-icons/fi\";\n\nimport { BsHeartFill, BsHeart } from \"react-icons/bs\";\n\n// can delete, wanted to see if this could fix the overlay gradient from overflowing\n// maybe don't delete, the overflow issue was fixed somewhere\nconst MediaWrapper = styled.div``;\n\nconst Image = styled.img`\n    position: relative;\n    width: 100%;\n    height: auto;\n    z-index: -1;\n`;\n\nconst Video = styled.video`\n    position: relative;\n    width: 100%;\n    height: auto;\n    z-index: -1;\n`;\n\nconst LinkOverlay = styled.div`\n    position: absolute;\n    z-index: 0;\n    bottom: 2px;\n    /* color: red; */\n    color: black;\n    display: none;\n`;\n\nconst HeartOverlay = styled.div`\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    /* -webkit-transform: translate(-50%, -50%); */\n    transform: translate(-50%, -50%);\n\n    z-index: 0;\n    color: black;\n    display: none;\n`;\n\nconst Overlay = styled.div`\n    position: relative;\n    height: ${(props) => (props.height ? props.height : \"auto\")};\n\n    display: flex;\n    justify-content: center;\n\n    /* overflow: hidden; */\n\n    &:hover {\n        background: rgb(0, 0, 0);\n        /* opacity: 0.9; */\n        background: linear-gradient(\n            0deg,\n            rgba(0, 0, 0, 0.15) 0%,\n            rgba(0, 0, 0, 0.15) 100%\n        );\n\n        ${LinkOverlay} {\n            display: block;\n        }\n\n        ${HeartOverlay} {\n            display: block;\n        }\n    }\n`;\n\n// const Button = styled.button`\n//   /* Adapt the colors based on primary prop */\n//   background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n//   color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n//   font-size: 1em;\n//   margin: 1em;\n//   padding: 0.25em 1em;\n//   border: 2px solid palevioletred;\n//   border-radius: 3px;\n// `;\n\n// render(\n//   <div>\n//     <Button>Normal</Button>\n//     <Button primary>Primary</Button>\n\nconst LinkButton = styled.a`\n    position: relative;\n    width: auto;\n    height: auto;\n    background-color: Transparent;\n    border: none;\n    /* overflow: hidden; */\n\n    &:link {\n        color: white;\n    }\n    &:visited {\n        color: white;\n    }\n    &:hover {\n        color: white;\n        text-decoration: none;\n    }\n    &:focus {\n        color: white;\n    }\n    &:active {\n        color: white;\n    }\n`;\n\nconst LinkIcon = styled(FiExternalLink)`\n    position: relative;\n    height: 30px;\n    width: 30px;\n    margin-left: 10px;\n    float: right;\n`;\n\nconst LinkText = styled.p`\n    position: relative;\n    float: left;\n    margin-top: 6px;\n`;\n\nconst HeartButton = styled.button`\n    position: relative;\n    width: 50px;\n    height: 50px;\n    background-color: Transparent;\n    border: none;\n    float: right;\n    &:active {\n        outline: 0;\n    }\n    &:focus {\n        outline: 0;\n    }\n    &:hover {\n        outline: 0;\n        stroke: red !important;\n    }\n`;\n\nconst HeartOutlineIcon = styled(BsHeart)`\n    position: relative;\n    opacity: 100;\n    width: 100%;\n    height: auto;\n\n    fill: white;\n    &:hover {\n        fill: red;\n    }\n`;\n\nconst HeartFilledIcon = styled(BsHeartFill)`\n    position: relative;\n    opacity: 100;\n    width: 100%;\n    height: auto;\n\n    fill: red;\n`;\n\nexport default class extends React.Component {\n    // constructor(props) {\n    //     super();\n    //     this.state = {\n    //         ...props,\n    //         // videoRef: React.createRef(),\n    //         // isHeartClicked: false,\n    //     };\n    // }\n\n    // handleClick = () => {\n    //     console.log(\"inside handleClick\");\n    //     // if (this.props.videoRef.current.paused) {\n    //     //     this.props.videoRef.current.play();\n    //     // } else {\n    //     //     this.props.videoRef.current.pause();\n    //     // }\n    // };\n\n    handleHeartClick = () => {\n        this.props.handleHeartClick(this.props);\n        console.log(this.props);\n    };\n\n    render() {\n        const overlayContent = (\n            <>\n                <LinkOverlay>\n                    <LinkButton\n                        href={`https://reddit.com${this.props.redditLink}`}\n                        rel={\"nofollow noopener\"}\n                        target={\"_blank\"}\n                    >\n                        <LinkText>{this.props.subreddit}</LinkText>\n                        <LinkIcon />\n                    </LinkButton>\n                </LinkOverlay>\n                <HeartOverlay onClick={this.handleHeartClick}>\n                    <HeartButton>\n                        {this.props.isHeartClicked ? (\n                            <HeartFilledIcon></HeartFilledIcon>\n                        ) : (\n                            <HeartOutlineIcon></HeartOutlineIcon>\n                        )}\n                        {/* <HeartIcon\n                            clicked={this.props.isHeartClicked.toString()}\n                        /> */}\n                    </HeartButton>\n                </HeartOverlay>\n            </>\n        );\n\n        switch (this.props.type) {\n            case \"image\":\n            case \"gif\":\n                return (\n                    <MediaWrapper>\n                        <Overlay height={this.props.height}>\n                            {overlayContent}\n                            <Image src={this.props.url} alt=\"\"></Image>\n                        </Overlay>\n                    </MediaWrapper>\n                );\n            case \"reddit video\":\n                return (\n                    <MediaWrapper>\n                        <Overlay height={this.props.height}>\n                            {overlayContent}\n                            <Video\n                                // ref={this.props.videoRef}\n                                autoPlay=\"autoplay\"\n                                loop\n                                poster={this.props.posterUrl}\n                            >\n                                <source src={this.props.url}></source>\n                            </Video>\n                        </Overlay>\n                    </MediaWrapper>\n                );\n            case \"self\":\n            case \"link\":\n            default:\n                return \"\";\n        }\n    }\n}\n","import React from \"react\";\nimport Media from \"./Media\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport styled from \"styled-components\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Masonry from \"react-masonry-css\";\n\nconst MasonryStyles = styled.div`\n    /* whole grid */\n    .masonry-grid {\n        display: -webkit-box; /* Not needed if autoprefixing */\n        display: -ms-flexbox; /* Not needed if autoprefixing */\n        display: flex;\n        width: 100%;\n        margin: 0 auto;\n    }\n\n    /* grid columns */\n    .masonry-grid_column {\n        background-clip: padding-box;\n    }\n\n    /* individual items */\n    .masonry-grid_column > * {\n    }\n`;\n\nexport default function (props) {\n    return (\n        <>\n            {props.currentPage === \"heartedPage\" ? null : (\n                <InfiniteScroll\n                    dataLength={props.mediaObjects.length}\n                    next={props.fetchBasedOnWeights}\n                    hasMore={true}\n                    style={{ overflow: \"hidden\" }}\n                ></InfiniteScroll>\n            )}\n\n            <MasonryStyles>\n                <Masonry\n                    breakpointCols={3}\n                    className=\"masonry-grid\"\n                    columnClassName=\"masonry-grid_column\"\n                >\n                    {props.mediaObjects.map((mediaObject, index) => {\n                        return (\n                            <Media\n                                {...mediaObject}\n                                handleHeartClick={props.handleHeartClick}\n                                index={index}\n                                key={`${mediaObject.id}`}\n                            />\n                        );\n                    })}\n                </Masonry>\n            </MasonryStyles>\n        </>\n    );\n}\n","/* eslint-disable jsx-a11y/accessible-emoji */\r\nimport React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst CustomButton = styled(Button)`\r\n    border-color: ${(props) => props.color} !important;\r\n    /* color: ${(props) => props.color}; */\r\n    background: ${(props) => props.color} !important;\r\n    color: white;\r\n\r\n    &:hover {\r\n        color: rgb(230, 230, 230);\r\n    }\r\n    &:active {\r\n        background: ${(props) => props.color} !important;\r\n    }\r\n    &:focus {\r\n        box-shadow: none !important;\r\n    }\r\n`;\r\nconst Wrapper = styled.div`\r\n    h1 {\r\n        margin-top: 20px;\r\n    }\r\n    p {\r\n        margin-top: 10px;\r\n        margin-bottom: 30px;\r\n    }\r\n`;\r\n\r\nexport default function (props) {\r\n    return (\r\n        <Wrapper>\r\n            <Row>\r\n                <Col>\r\n                    <h1 className=\"display-4 text-center\">\r\n                        Daily Dose of Cuteness\r\n                    </h1>\r\n                    <p className=\"lead text-center\">\r\n                        🌈 A few cute pictures a day keeps the sadness away 🤗\r\n                    </p>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row className=\"text-center\">\r\n                <Col></Col>\r\n                <Col xs={3}>\r\n                    <CustomButton\r\n                        value=\"everything\"\r\n                        // variant=\"outline-primary\"\r\n                        color={\"#138715\"}\r\n                        onClick={props.handleCategoryClick}\r\n                    >\r\n                        EVERYTHING\r\n                    </CustomButton>\r\n                    <CustomButton\r\n                        value=\"dogs\"\r\n                        // variant=\"outline-primary\"\r\n                        color={\"#304CC8\"}\r\n                        onClick={props.handleCategoryClick}\r\n                    >\r\n                        Dogs\r\n                    </CustomButton>\r\n                    <CustomButton\r\n                        value=\"cats\"\r\n                        // variant=\"outline-primary\"\r\n                        color={\"#4E2388\"}\r\n                        onClick={props.handleCategoryClick}\r\n                    >\r\n                        Cats\r\n                    </CustomButton>\r\n                    <CustomButton\r\n                        value=\"reptiles\"\r\n                        // variant=\"outline-primary\"\r\n                        color={\"#DA9101\"}\r\n                        onClick={props.handleCategoryClick}\r\n                    >\r\n                        Reptiles\r\n                    </CustomButton>\r\n                    <CustomButton\r\n                        value=\"birds\"\r\n                        // variant=\"outline-primary\"\r\n                        color={\"#CA302F\"}\r\n                        onClick={props.handleCategoryClick}\r\n                    >\r\n                        Birds\r\n                    </CustomButton>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Wrapper>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport { BsHeartFill, BsHouseDoorFill } from \"react-icons/bs\";\r\n\r\nimport { AiOutlineGithub } from \"react-icons/ai\";\r\n\r\nconst NavBar = styled.div`\r\n    position: fixed;\r\n    background-color: #fff;\r\n    border-color: #fff;\r\n    height: 100vh;\r\n    width: 80px;\r\n    left: 0px;\r\n    box-shadow: 3px 0 10px -5px #c1c1c1;\r\n    padding-top: 12px;\r\n    z-index: 1000;\r\n`;\r\n\r\nconst NavCol = styled(Col)`\r\n    & * {\r\n        margin-bottom: 15px;\r\n    }\r\n`;\r\n\r\nconst NavButton = styled.button`\r\n    position: relative;\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: Transparent;\r\n    border: none;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    &:active {\r\n        outline: 0;\r\n    }\r\n    &:focus {\r\n        outline: 0;\r\n    }\r\n    &:hover {\r\n        outline: 0;\r\n    }\r\n`;\r\n\r\nconst HomeIcon = styled(BsHouseDoorFill)`\r\n    width: 45px;\r\n    height: auto;\r\n    stroke: ${(props) => props.color};\r\n    fill: ${(props) => props.color};\r\n`;\r\nconst HomeHoveredIcon = styled(BsHouseDoorFill)`\r\n    width: 45px;\r\n    height: auto;\r\n    stroke: ${(props) => props.color};\r\n    fill: ${(props) => props.color};\r\n`;\r\n\r\nconst HeartIcon = styled(BsHeartFill)`\r\n    width: 45px;\r\n    height: auto;\r\n    stroke: ${(props) => props.color};\r\n    fill: ${(props) => props.color};\r\n`;\r\nconst HeartHoveredIcon = styled(BsHeartFill)`\r\n    width: 45px;\r\n    height: auto;\r\n    stroke: ${(props) => props.color};\r\n    fill: ${(props) => props.color};\r\n`;\r\n\r\nconst GithubIcon = styled(AiOutlineGithub)`\r\n    margin-top: -7px;\r\n    width: 47px;\r\n    height: auto;\r\n    stroke: ${(props) => props.color};\r\n    fill: ${(props) => props.color};\r\n`;\r\n\r\nexport default function (props) {\r\n    // console.log(props);\r\n    return (\r\n        <NavBar>\r\n            <Container>\r\n                <Row style={{ height: \"100vh\" }}>\r\n                    <NavCol>\r\n                        <NavButton\r\n                            onMouseEnter={props.handleMouseEnterHome}\r\n                            onMouseLeave={props.handleMouseLeaveHome}\r\n                            onClick={props.handleClickHome}\r\n                        >\r\n                            {props.isHomeHovered ? (\r\n                                <HomeHoveredIcon color={\"rgb(255, 0, 0)\"} />\r\n                            ) : (\r\n                                <HomeIcon color={\"rgb(150,150,150)\"} />\r\n                            )}\r\n                        </NavButton>\r\n                        <NavButton\r\n                            onMouseEnter={props.handleMouseEnterHeart}\r\n                            onMouseLeave={props.handleMouseLeaveHeart}\r\n                            onClick={props.handleClickHeart}\r\n                        >\r\n                            {props.isHeartHovered ? (\r\n                                <HeartHoveredIcon color={\"rgb(255,0,0)\"} />\r\n                            ) : (\r\n                                <HeartIcon color={\"rgb(150,150,150)\"} />\r\n                            )}\r\n                        </NavButton>\r\n                        <NavButton\r\n                            onMouseEnter={props.handleMouseEnterGithub}\r\n                            onMouseLeave={props.handleMouseLeaveGithub}\r\n                            onClick={props.handleClickGithub}\r\n                        >\r\n                            {props.isGithubHovered ? (\r\n                                <GithubIcon color={\"rgb(255,0,0)\"} />\r\n                            ) : (\r\n                                <GithubIcon color={\"rgb(150,150,150)\"} />\r\n                            )}\r\n                        </NavButton>\r\n                    </NavCol>\r\n                </Row>\r\n            </Container>\r\n        </NavBar>\r\n    );\r\n}\r\n","import React from \"react\";\nimport Heading from \"./Components/Heading\";\nimport axios from \"axios\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport cloneDeep from \"lodash/cloneDeep\";\nimport MasonryImages from \"./Components/MasonryImages\";\n\nimport { createGlobalStyle } from \"styled-components\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nimport HomePage from \"./Components/HomePage\";\n\nimport NavBar from \"./Components/NavBar\";\nimport Alert from \"react-bootstrap/Alert\";\nconst subreddits = {\n    dogs: [\n        \"dogs_getting_dogs\",\n        \"AirSwimming\",\n        \"dogswithjobs\",\n        \"slammywhammies\",\n        \"BeachDogs\",\n        \"beagle\",\n        \"bernesemountaindogs\",\n        \"blurrypicturesofdogs\",\n        \"BorderCollie\",\n        \"Boxer\",\n        \"Bulldogs\",\n        \"corgi\",\n        \"dogpictures\",\n        \"dogswearinghats\",\n        \"germanshepherds\",\n        \"Greyhounds\",\n        \"labrador\",\n        \"lookatmydog\",\n        \"mutt\",\n        \"pitbulls\",\n        \"pug\",\n        \"rarepuppers\",\n        \"shiba\",\n        \"WhatsWrongWithYourDog\",\n        \"woof_irl\",\n        \"Zoomies\",\n    ],\n    cats: [\n        \"MEOW_IRL\",\n        \"cats\",\n        \"Catspotting\",\n        \"Kitten\",\n        \"FromKittenToCat\",\n        \"illegallybigcats\",\n        \"SleepingCats\",\n        \"grumpycats\",\n        \"kittens\",\n        \"TruckerCats\",\n        \"cutecats\",\n        \"catreactiongifs\",\n        \"kitty\",\n        \"cat\",\n        \"kitties\",\n        \"IllegallySmolCats\",\n        \"SeniorCats\",\n        \"wetcats\",\n        \"catpics\",\n        \"catpictures\",\n        \"kittengifs\",\n        \"CatGifs\",\n        \"SupermodelCats\",\n        \"blurrypicturesofcats\",\n    ],\n    reptiles: [\n        \"BeardedDragons\",\n        \"Chameleons\",\n        \"iguanas\",\n        \"leopardgeckos\",\n        \"snakes\",\n        \"Tortoises\",\n        \"TurtleFacts\",\n        \"CrestedGecko\",\n        \"geckos\",\n        \"herpetology\",\n        \"Lizards\",\n        \"MonitorLizard\",\n        \"reptiles\",\n        \"snakeswearinghats\",\n        \"Sneks\",\n        \"turtles\",\n        \"ballpython\",\n        \"GeckoSmiles\",\n        \"SnakesWithHats\",\n        \"Tortoises\",\n        \"turtle\",\n        \"turtlesonalligators\",\n    ],\n    birds: [\n        \"ALLTHEBIRDS\",\n        \"BackYardChickens\",\n        \"birding\",\n        \"birdpics\",\n        \"birdsofprey\",\n        \"duck\",\n        \"geese\",\n        \"Owls\",\n        \"PetDoves\",\n        \"birdwatching\",\n        \"chickens\",\n        \"Conures\",\n        \"DivorcedBirds\",\n        \"Finches\",\n        \"parrots\",\n        \"penguin\",\n        \"babyduckgifs\",\n        \"BirdPhotography\",\n        \"BirdsBeingDicks\",\n        \"birdswitharms\",\n        \"budgies\",\n        \"cockatiel\",\n        \"crows\",\n        \"hummingbirds\",\n        \"PartyParrot\",\n        \"ShoebillStorks\",\n    ],\n    everything: [\n        \"AnimalsBeingBros\",\n        \"babyelephantgifs\",\n        \"AnimalsBeingFunny\",\n        \"AnimalsInHats\",\n        \"animalssmiling\",\n        \"hitmanimals\",\n        \"petsinwigs\",\n        \"AnimalShaming\",\n        \"AnimalsBeingDerps\",\n        \"AnimalsStuckInThings\",\n        \"AnimalsWithoutNecks\",\n        \"Delightfullychubby\",\n        \"FunnyAnimals\",\n        \"tinyanimalsonfingers\",\n        \"AnimalTextGifs\",\n        \"AnimalsBeingJerks\",\n        \"AnimalsFailing\",\n        \"sittinglikehumans\",\n        \"StoppedWorking\",\n        \"TrollingAnimals\",\n        \"aww\",\n        \"CatsAndDogsBFF\",\n        \"Sleepinganimals\",\n        \"unlikelyfriends\",\n        \"ALLTHEANIMALS\",\n        \"awwakeup\",\n        \"bigboye\",\n        \"hardcoreaww\",\n        \"Teefers\",\n        \"brushybrushy\",\n        \"NatureIsFuckingLit\",\n        \"Pet_Renaissance\",\n        \"TinyUnits\",\n    ],\n};\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0px;\n        padding: 0px;\n    }\n\n    &.app {\n        position: relative;\n    }\n`;\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mediaObjects: [], // array of objects\n            currentPage: \"homePage\",\n            categories: {},\n            heartedMedia: [],\n            alertText: undefined,\n            navData: {\n                isHeartHovered: false,\n                isHomeHovered: false,\n                isGithubHovered: false,\n                handleMouseEnterHome: this.handleMouseEnterHome,\n                handleMouseLeaveHome: this.handleMouseLeaveHome,\n                handleMouseEnterHeart: this.handleMouseEnterHeart,\n                handleMouseLeaveHeart: this.handleMouseLeaveHeart,\n                handleMouseEnterGithub: this.handleMouseEnterGithub,\n                handleMouseLeaveGithub: this.handleMouseLeaveGithub,\n                handleClickHome: this.handleClickHome,\n                handleClickHeart: this.handleClickHeart,\n                handleClickGithub: this.handleClickGithub,\n            },\n        };\n    }\n    // this\n\n    componentDidMount() {\n        if (localStorage.getItem(\"heartedMedia\") !== null) {\n            this.setState({\n                heartedMedia: JSON.parse(localStorage[\"heartedMedia\"]),\n            });\n        }\n    }\n\n    // NavBar\n    handleMouseEnterHome = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isHomeHovered = true;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleMouseLeaveHome = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isHomeHovered = false;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleClickHome = (e) => {\n        this.setState({ mediaObjects: [], currentPage: \"homePage\" });\n    };\n    handleMouseEnterHeart = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isHeartHovered = true;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleMouseLeaveHeart = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isHeartHovered = false;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleClickHeart = (e) => {\n        const newMediaObjects = cloneDeep(this.state.heartedMedia);\n        this.setState(\n            {\n                currentPage: \"heartedPage\",\n                mediaObjects: newMediaObjects,\n            },\n            () => {}\n        );\n    };\n\n    handleMouseEnterGithub = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isGithubHovered = true;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleMouseLeaveGithub = (e) => {\n        this.setState((prevState) => {\n            const newNavData = cloneDeep(prevState.navData);\n            newNavData.isGithubHovered = false;\n            return {\n                navData: newNavData,\n            };\n        });\n    };\n    handleClickGithub = (e) => {\n        window.open(\n            \"https://github.com/giangd/daily-dose-of-cuteness\",\n            \"_blank\"\n        );\n    };\n\n    // HomePage\n    handleCategoryClick = (e) => {\n        this.setState(\n            {\n                categories: this.getInitialSubredditData(),\n                mediaObjects: [],\n                currentPage: `${e.target.value}`,\n            },\n            () => {\n                this.fetchBasedOnWeights();\n            }\n        );\n    };\n\n    // this, Media\n    getInitialSubredditData = () => {\n        const newCategories = cloneDeep(this.state.categories);\n        for (const category in subreddits) {\n            newCategories[category] = {};\n            for (const name of subreddits[category]) {\n                newCategories[category][name] = {\n                    weight: 1,\n                    normalizedWeight: undefined,\n                    afterId: undefined,\n                };\n            }\n        }\n\n        const normalizedInitialData = this.getNormalizedSubredditData(\n            newCategories\n        );\n\n        return normalizedInitialData;\n    };\n    getNormalizedSubredditData = (categories) => {\n        for (const categoryName in categories) {\n            let sum = 0;\n            for (const subredditName in categories[categoryName]) {\n                const subredditObj = categories[categoryName][subredditName];\n                sum += subredditObj.weight;\n            }\n\n            for (const subredditName in categories[categoryName]) {\n                const subredditObj = categories[categoryName][subredditName];\n                subredditObj.normalizedWeight = subredditObj.weight / sum;\n            }\n        }\n\n        return categories;\n    };\n    fetchBasedOnWeights = () => {\n        const maxImages = 25;\n\n        const subredditsToFetchFrom = {};\n        for (\n            let numImagesFetched = 0;\n            numImagesFetched < maxImages;\n            numImagesFetched++\n        ) {\n            let random = Math.random();\n            let namesIndex = 0;\n            let names = Object.keys(\n                this.state.categories[this.state.currentPage]\n            );\n            let data;\n\n            while (random > 0) {\n                data = this.state.categories[this.state.currentPage][\n                    names[namesIndex]\n                ];\n                random -= data.normalizedWeight;\n                namesIndex++;\n            }\n            namesIndex--;\n\n            let chosenName = names[namesIndex];\n\n            // increment numImages of selected subreddit\n            if (chosenName in subredditsToFetchFrom) {\n                subredditsToFetchFrom[chosenName] = {\n                    namesIndex,\n                    numImages: subredditsToFetchFrom[chosenName].numImages + 1,\n                };\n            } else {\n                subredditsToFetchFrom[chosenName] = {\n                    namesIndex,\n                    numImages: 1,\n                };\n            }\n        }\n\n        for (const name in subredditsToFetchFrom) {\n            this.fetchImageFromSubreddit(\n                name,\n                subredditsToFetchFrom[name].numImages\n            );\n        }\n    };\n    fetchImageFromSubreddit = async (name, numImages) => {\n        const config = {\n            crossdomain: true,\n        };\n\n        const apiUrl = \"https://polar-escarpment-41746.herokuapp.com/api\";\n        const after = this.state.categories[this.state.currentPage][name]\n            .afterId;\n\n        try {\n            const {\n                data: { afterId, mediaObjects },\n            } = await axios.get(\n                `${apiUrl}/${name}/${numImages}/${after}`,\n                config\n            );\n\n            // perform checks\n            // if any of the subreddits have this afterId, throw error\n            for (const name in this.state.categories[this.state.currentPage]) {\n                if (\n                    this.state.categories[this.state.currentPage][name]\n                        .afterId === afterId\n                ) {\n                    throw new Error(\"duplicate after ids found\");\n                }\n            }\n\n            // if any of the mediaObjects have this postId, throw error\n            for (const mediaObject of mediaObjects) {\n                for (const stateMediaObject of this.state.mediaObjects) {\n                    if (stateMediaObject.id === `${mediaObject.id}`) {\n                        throw new Error(\"duplicate media ids found\");\n                    }\n                }\n            }\n\n            // no duplicates ids or afterId's, update state\n\n            const newMediaObjects = cloneDeep(this.state.mediaObjects).concat(\n                mediaObjects\n            );\n\n            // update subreddit[index].afterId\n            const newCategories = cloneDeep(this.state.categories);\n            newCategories[this.state.currentPage][name].afterId = afterId;\n\n            this.setState({\n                mediaObjects: newMediaObjects,\n                categories: newCategories,\n            });\n        } catch (err) {\n            if (err.message === \"duplicate after ids found\") {\n                // console.log(\"duplicate afterId's gracefully handled\");\n            } else if (err.message === \"duplicate media ids found\") {\n                // console.log(\"duplicate media id gracefully handled\");\n            } else {\n                // console.error(\"unknown error in fetchImageFromSubreddit:\");\n                // console.log(err);\n            }\n        }\n    };\n    handleClickMediaHeart = (mediaObject) => {\n        if (this.state.currentPage === \"heartedPage\") {\n            const newMediaObjects = cloneDeep(this.state.mediaObjects);\n            newMediaObjects.splice(mediaObject.index, 1);\n\n            localStorage.setItem(\n                \"heartedMedia\",\n                JSON.stringify(newMediaObjects)\n            );\n            this.setState({ mediaObjects: newMediaObjects });\n        } else {\n            const newMediaObjects = cloneDeep(this.state.mediaObjects);\n            const subredditName = mediaObject.subreddit;\n            let newCategories = cloneDeep(this.state.categories);\n\n            // update isHeartClicked\n            // update weighting\n            // update heartedMedia\n            let newHeartedMedia = cloneDeep(this.state.heartedMedia);\n            let moreOrLessText;\n            if (this.state.mediaObjects[mediaObject.index].isHeartClicked) {\n                // should unheart\n                newMediaObjects[mediaObject.index].isHeartClicked = false;\n\n                newHeartedMedia = newHeartedMedia.filter((element) => {\n                    return element.id !== newMediaObjects[mediaObject.index].id;\n                });\n\n                newCategories[this.state.currentPage][\n                    subredditName\n                ].weight -= 10;\n\n                moreOrLessText = \"less\";\n            } else {\n                // should heart\n                newMediaObjects[mediaObject.index].isHeartClicked = true;\n\n                newHeartedMedia.push(newMediaObjects[mediaObject.index]);\n\n                newCategories[this.state.currentPage][\n                    subredditName\n                ].weight += 10;\n\n                moreOrLessText = \"more\";\n            }\n\n            const oldPercent = Math.round(\n                newCategories[this.state.currentPage][subredditName]\n                    .normalizedWeight * 100\n            );\n            newCategories = this.getNormalizedSubredditData(newCategories);\n            const newPercent = Math.round(\n                newCategories[this.state.currentPage][subredditName]\n                    .normalizedWeight * 100\n            );\n\n            const newAlertText = `You'll see ${moreOrLessText} things from ${subredditName}! ${oldPercent}% ➜ ${newPercent}%`;\n\n            localStorage.setItem(\n                \"heartedMedia\",\n                JSON.stringify(newHeartedMedia)\n            );\n\n            this.setState(\n                {\n                    mediaObjects: newMediaObjects,\n                    categories: newCategories,\n                    heartedMedia: newHeartedMedia,\n                    alertText: newAlertText,\n                    showAlert: true,\n                },\n                () => {\n                    setTimeout(() => {\n                        if (this.state.alertText === newAlertText) {\n                            this.setState({ showAlert: false });\n                        }\n                    }, 3000);\n                }\n            );\n        }\n    };\n\n    render() {\n        const renderMasonryImages = () => {\n            if (this.state.currentPage !== \"homePage\") {\n                return (\n                    <>\n                        <Row>\n                            <Col>\n                                <Heading\n                                    currentPage={this.state.currentPage}\n                                ></Heading>\n                            </Col>\n                        </Row>\n                        <Row>\n                            <Col>\n                                <MasonryImages\n                                    {...this.state}\n                                    handleHeartClick={\n                                        this.handleClickMediaHeart\n                                    }\n                                    fetchBasedOnWeights={\n                                        this.fetchBasedOnWeights\n                                    }\n                                ></MasonryImages>\n                            </Col>\n                        </Row>\n                    </>\n                );\n            }\n        };\n\n        const renderHomePage = () => {\n            if (this.state.currentPage === \"homePage\") {\n                return (\n                    <HomePage\n                        handleCategoryClick={this.handleCategoryClick}\n                    ></HomePage>\n                );\n            }\n        };\n\n        return (\n            <div className=\"app\">\n                <GlobalStyle />\n                {this.state.showAlert && (\n                    <Alert\n                        variant=\"primary\"\n                        className=\"text-center\"\n                        style={{\n                            position: \"fixed\",\n                            left: \"0px\",\n                            right: \"0px\",\n                            zIndex: 1,\n                            marginLeft: \"auto\",\n                            marginRight: \"auto\",\n                        }}\n                    >\n                        {this.state.alertText}\n                    </Alert>\n                )}\n\n                <NavBar {...this.state.navData}></NavBar>\n                <div style={{ marginLeft: \"80px\", padding: \"0 50px 0 50px\" }}>\n                    <Container fluid>\n                        <Row>\n                            <Col>\n                                {renderMasonryImages()}\n                                {renderHomePage()}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}